{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport blogService from \"./blogService\";\nconst initialState = {\n  blog: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const postBlogItem = createAsyncThunk(\"/\", async (blogItemData, thunkAPI) => {\n  try {} catch (e) {\n    const message = e.response && e.response.data && e.response.data.message || e.message || e.toString();\n  }\n});\nexport const getBlog = createAsyncThunk(\"/\", async thunkAPI => {\n  try {} catch (e) {}\n});\nexport const getBlogItemm = createAsyncThunk(\"/\", async thunkAPI => {\n  try {} catch (e) {}\n});\nexport const blogSlice = createSlice({\n  name: \"blogItem\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {}\n});\nexport const {\n  reset\n} = blogSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"sources":["C:/Users/dougi/OneDrive/Desktop/portfolio/client/src/redux/blog/blogReducer.js"],"names":["createSlice","createAsyncThunk","blogService","initialState","blog","isError","isSuccess","isLoading","message","postBlogItem","blogItemData","thunkAPI","e","response","data","toString","getBlog","getBlogItemm","blogSlice","name","reducers","reset","state","extraReducers","builder","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAQA,OAAO,MAAMC,YAAY,GAAGR,gBAAgB,CAC1C,GAD0C,EAE1C,OAAOS,YAAP,EAAqBC,QAArB,KAAkC;AAChC,MAAI,CACH,CADD,CACE,OAAOC,CAAP,EAAU;AACV,UAAMJ,OAAO,GACVI,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACC,QAAF,CAAWC,IAAzB,IAAiCF,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBN,OAAlD,IACAI,CAAC,CAACJ,OADF,IAEAI,CAAC,CAACG,QAAF,EAHF;AAID;AACF,CAVyC,CAArC;AAaP,OAAO,MAAMC,OAAO,GAAGf,gBAAgB,CAAC,GAAD,EAAM,MAAOU,QAAP,IAAoB;AAC/D,MAAI,CACH,CADD,CACE,OAAOC,CAAP,EAAU,CAAE;AACf,CAHsC,CAAhC;AAKP,OAAO,MAAMK,YAAY,GAAGhB,gBAAgB,CAAC,GAAD,EAAM,MAAOU,QAAP,IAAoB;AACpE,MAAI,CACH,CADD,CACE,OAAOC,CAAP,EAAU,CAAE;AACf,CAH2C,CAArC;AAKP,OAAO,MAAMM,SAAS,GAAGlB,WAAW,CAAC;AACnCmB,EAAAA,IAAI,EAAE,UAD6B;AAEnChB,EAAAA,YAFmC;AAGnCiB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWnB;AADV,GAHyB;AAMnCoB,EAAAA,aAAa,EAAGC,OAAD,IAAa,CAAE;AANK,CAAD,CAA7B;AASP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAYH,SAAS,CAACO,OAA5B;AACP,eAAeP,SAAS,CAACQ,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport blogService from \"./blogService\";\n\nconst initialState = {\n  blog: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const postBlogItem = createAsyncThunk(\n  \"/\",\n  async (blogItemData, thunkAPI) => {\n    try {\n    } catch (e) {\n      const message =\n        (e.response && e.response.data && e.response.data.message) ||\n        e.message ||\n        e.toString();\n    }\n  }\n);\n\nexport const getBlog = createAsyncThunk(\"/\", async (thunkAPI) => {\n  try {\n  } catch (e) {}\n});\n\nexport const getBlogItemm = createAsyncThunk(\"/\", async (thunkAPI) => {\n  try {\n  } catch (e) {}\n});\n\nexport const blogSlice = createSlice({\n  name: \"blogItem\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {},\n});\n\nexport const { reset } = blogSlice.actions;\nexport default blogSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}