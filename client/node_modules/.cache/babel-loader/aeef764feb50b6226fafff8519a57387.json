{"ast":null,"code":"// import media\nimport bootstrapLogo from \"../../media/bootstrap-logo2.svg\";\nimport cssLogo from \"../../media/css-logo2.svg\";\nimport expressLogo from \"../../media/express-logo2.svg\";\nimport htmlLogo from \"../../media/html-logo2.svg\";\nimport jestLogo from \"../../media/jest-logo2.svg\";\nimport lessLogo from \"../../media/less-logo2.svg\";\nimport materializeLogo from \"../../media/materialize-logo2.svg\";\nimport mongoLogo from \"../../media/mongo-logo2.svg\";\nimport nodeLogo from \"../../media/node-logo2.svg\";\nimport phpLogo from \"../../media/php-logo2.svg\";\nimport pythonLogo from \"../../media/python-logo2.svg\";\nimport reactLogo from \"../../media/react-logo2.svg\";\nimport sassLogo from \"../../media/sass-logo2.svg\";\nexport const capitalise = w => {\n  return w[0].toUpperCase() + w.substring(1);\n};\nexport const getCardLogos = l => {\n  switch (l) {\n    case \"bootstrap\":\n      return bootstrapLogo;\n      break;\n\n    case \"css\":\n      return cssLogo;\n      break;\n\n    case \"express\":\n      return expressLogo;\n      break;\n\n    case \"html\":\n      return htmlLogo;\n      break;\n\n    case \"jest\":\n      return jestLogo;\n      break;\n\n    case \"less\":\n      return lessLogo;\n      break;\n\n    case \"materialize\":\n      return materializeLogo;\n      break;\n\n    case \"mongo\":\n      return mongoLogo;\n      break;\n\n    case \"node\":\n      return nodeLogo;\n      break;\n\n    case \"php\":\n      return phpLogo;\n      break;\n\n    case \"python\":\n      return pythonLogo;\n      break;\n\n    case \"react\":\n      return reactLogo;\n      break;\n\n    case \"sass\":\n      return sassLogo;\n      break;\n\n    default:\n      break;\n  }\n};\nexport const shuffle = array => {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n};","map":{"version":3,"sources":["C:/Users/dougi/OneDrive/Desktop/portfolio/client/src/components/helpers/index.js"],"names":["bootstrapLogo","cssLogo","expressLogo","htmlLogo","jestLogo","lessLogo","materializeLogo","mongoLogo","nodeLogo","phpLogo","pythonLogo","reactLogo","sassLogo","capitalise","w","toUpperCase","substring","getCardLogos","l","shuffle","array","currentIndex","length","randomIndex","Math","floor","random"],"mappings":"AAAA;AACA,OAAOA,aAAP,MAA0B,iCAA1B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAO,MAAMC,UAAU,GAAIC,CAAD,IAAO;AAC/B,SAAOA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,KAAqBD,CAAC,CAACE,SAAF,CAAY,CAAZ,CAA5B;AACD,CAFM;AAIP,OAAO,MAAMC,YAAY,GAAIC,CAAD,IAAO;AACjC,UAAQA,CAAR;AACE,SAAK,WAAL;AACE,aAAOlB,aAAP;AACA;;AACF,SAAK,KAAL;AACE,aAAOC,OAAP;AACA;;AACF,SAAK,SAAL;AACE,aAAOC,WAAP;AACA;;AACF,SAAK,MAAL;AACE,aAAOC,QAAP;AACA;;AACF,SAAK,MAAL;AACE,aAAOC,QAAP;AACA;;AACF,SAAK,MAAL;AACE,aAAOC,QAAP;AACA;;AACF,SAAK,aAAL;AACE,aAAOC,eAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAOC,SAAP;AACA;;AACF,SAAK,MAAL;AACE,aAAOC,QAAP;AACA;;AACF,SAAK,KAAL;AACE,aAAOC,OAAP;AACA;;AACF,SAAK,QAAL;AACE,aAAOC,UAAP;AACA;;AACF,SAAK,OAAL;AACE,aAAOC,SAAP;AACA;;AACF,SAAK,MAAL;AACE,aAAOC,QAAP;AACA;;AACF;AACE;AAzCJ;AA2CD,CA5CM;AA8CP,OAAO,MAAMO,OAAO,GAAIC,KAAD,IAAW;AAChC,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MACEC,WADF,CADgC,CAIhC;;AACA,SAAOF,YAAY,IAAI,CAAvB,EAA0B;AACxB;AACAE,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;AACAA,IAAAA,YAAY,GAHY,CAKxB;;AACA,KAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACG,WAAD,CAA3B,IAA4C,CAC1CH,KAAK,CAACG,WAAD,CADqC,EAE1CH,KAAK,CAACC,YAAD,CAFqC,CAA5C;AAID;;AAED,SAAOD,KAAP;AACD,CAlBM","sourcesContent":["// import media\nimport bootstrapLogo from \"../../media/bootstrap-logo2.svg\";\nimport cssLogo from \"../../media/css-logo2.svg\";\nimport expressLogo from \"../../media/express-logo2.svg\";\nimport htmlLogo from \"../../media/html-logo2.svg\";\nimport jestLogo from \"../../media/jest-logo2.svg\";\nimport lessLogo from \"../../media/less-logo2.svg\";\nimport materializeLogo from \"../../media/materialize-logo2.svg\";\nimport mongoLogo from \"../../media/mongo-logo2.svg\";\nimport nodeLogo from \"../../media/node-logo2.svg\";\nimport phpLogo from \"../../media/php-logo2.svg\";\nimport pythonLogo from \"../../media/python-logo2.svg\";\nimport reactLogo from \"../../media/react-logo2.svg\";\nimport sassLogo from \"../../media/sass-logo2.svg\";\n\nexport const capitalise = (w) => {\n  return w[0].toUpperCase() + w.substring(1);\n};\n\nexport const getCardLogos = (l) => {\n  switch (l) {\n    case \"bootstrap\":\n      return bootstrapLogo;\n      break;\n    case \"css\":\n      return cssLogo;\n      break;\n    case \"express\":\n      return expressLogo;\n      break;\n    case \"html\":\n      return htmlLogo;\n      break;\n    case \"jest\":\n      return jestLogo;\n      break;\n    case \"less\":\n      return lessLogo;\n      break;\n    case \"materialize\":\n      return materializeLogo;\n      break;\n    case \"mongo\":\n      return mongoLogo;\n      break;\n    case \"node\":\n      return nodeLogo;\n      break;\n    case \"php\":\n      return phpLogo;\n      break;\n    case \"python\":\n      return pythonLogo;\n      break;\n    case \"react\":\n      return reactLogo;\n      break;\n    case \"sass\":\n      return sassLogo;\n      break;\n    default:\n      break;\n  }\n};\n\nexport const shuffle = (array) => {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n};\n"]},"metadata":{},"sourceType":"module"}