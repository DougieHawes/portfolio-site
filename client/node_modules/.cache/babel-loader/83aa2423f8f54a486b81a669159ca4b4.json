{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport profileService from \"./profileService\";\nconst initialState = {\n  profile: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const postProfileItem = createAsyncThunk(\"/postprofileitem\", async (profileItemData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await profileService.postProfileItem(profileItemData, token);\n  } catch (e) {\n    const message = e.response && e.response.data && e.response.data.message || e.message || e.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const getProfile = createAsyncThunk(\"/getprofile\", async (_, thunkAPI) => {\n  try {\n    return await profileService.getProfile();\n  } catch (e) {\n    const message = e.response && e.response.data && e.response.data.message || e.message || e.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const profileSlice = createSlice({\n  name: \"profileItem\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(postProfileItem.pending, state => {\n      state.isLoading = true;\n    }).addCase(postProfileItem.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.profile.push(action.payload);\n    }).addCase(postProfileItem.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getProfile.pending, state => {\n      state.isLoading = true;\n    }).addCase(getProfile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.profile = action.payload;\n    }).addCase(getProfile.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = profileSlice.actions;\nexport default profileSlice.reducer;","map":{"version":3,"sources":["C:/Users/dougi/OneDrive/Desktop/portfolio/client/src/redux/profile/profileReducer.js"],"names":["createSlice","createAsyncThunk","profileService","initialState","profile","isError","isSuccess","isLoading","message","postProfileItem","profileItemData","thunkAPI","token","getState","auth","user","e","response","data","toString","rejectWithValue","getProfile","_","profileSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport profileService from \"./profileService\";\n\nconst initialState = {\n  profile: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const postProfileItem = createAsyncThunk(\n  \"/postprofileitem\",\n  async (profileItemData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token;\n\n      return await profileService.postProfileItem(profileItemData, token);\n    } catch (e) {\n      const message =\n        (e.response && e.response.data && e.response.data.message) ||\n        e.message ||\n        e.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const getProfile = createAsyncThunk(\n  \"/getprofile\",\n  async (_, thunkAPI) => {\n    try {\n      return await profileService.getProfile();\n    } catch (e) {\n      const message =\n        (e.response && e.response.data && e.response.data.message) ||\n        e.message ||\n        e.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const profileSlice = createSlice({\n  name: \"profileItem\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(postProfileItem.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(postProfileItem.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.profile.push(action.payload);\n      })\n      .addCase(postProfileItem.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      })\n      .addCase(getProfile.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getProfile.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.profile = action.payload;\n      })\n      .addCase(getProfile.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      });\n  },\n});\n\nexport const { reset } = profileSlice.actions;\nexport default profileSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}