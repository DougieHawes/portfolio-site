{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport skillsService from \"./skillsService\";\nconst initialState = {\n  skills: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const postSkillsItem = createAsyncThunk(\"/postskillsitem\", async (skillsItemData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().auth.user.token;\n    return await skillsService.postSkillsItem(skillsItemData, token);\n  } catch (e) {\n    const message = e.response && e.response.data && e.response.data.message || e.message || e.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const getSkills = createAsyncThunk(\"/getskills\", async (_, thunkAPI) => {\n  try {\n    return await skillsService.getSkills();\n  } catch (e) {\n    const message = e.response && e.response.data && e.response.data.message || e.message || e.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const getSkillsItemm = createAsyncThunk(\"/\", async (_, thunkAPI) => {\n  try {} catch (e) {}\n});\nexport const skillsSlice = createSlice({\n  name: \"skillsItem\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(postSkillsItem.pending, state => {\n      state.isLoading = true;\n    }).addCase(postSkillsItem.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.skills.push(action.payload);\n    }).addCase(postSkillsItem.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getSkills.pending, state => {\n      state.isLoading = true;\n    }).addCase(getSkills.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.skills = action.payload;\n    }).addCase(getSkills.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = skillsSlice.actions;\nexport default skillsSlice.reducer;","map":{"version":3,"sources":["C:/Users/dougi/OneDrive/Desktop/portfolio/client/src/redux/skills/skillsReducer.js"],"names":["createSlice","createAsyncThunk","skillsService","initialState","skills","isError","isSuccess","isLoading","message","postSkillsItem","skillsItemData","thunkAPI","token","getState","auth","user","e","response","data","toString","rejectWithValue","getSkills","_","getSkillsItemm","skillsSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport skillsService from \"./skillsService\";\n\nconst initialState = {\n  skills: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const postSkillsItem = createAsyncThunk(\n  \"/postskillsitem\",\n  async (skillsItemData, thunkAPI) => {\n    try {\n      const token = thunkAPI.getState().auth.user.token;\n\n      return await skillsService.postSkillsItem(skillsItemData, token);\n    } catch (e) {\n      const message =\n        (e.response && e.response.data && e.response.data.message) ||\n        e.message ||\n        e.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const getSkills = createAsyncThunk(\"/getskills\", async (_, thunkAPI) => {\n  try {\n    return await skillsService.getSkills();\n  } catch (e) {\n    const message =\n      (e.response && e.response.data && e.response.data.message) ||\n      e.message ||\n      e.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const getSkillsItemm = createAsyncThunk(\"/\", async (_, thunkAPI) => {\n  try {\n  } catch (e) {}\n});\n\nexport const skillsSlice = createSlice({\n  name: \"skillsItem\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(postSkillsItem.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(postSkillsItem.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.skills.push(action.payload);\n      })\n      .addCase(postSkillsItem.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      })\n      .addCase(getSkills.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getSkills.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.skills = action.payload;\n      })\n      .addCase(getSkills.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      });\n  },\n});\n\nexport const { reset } = skillsSlice.actions;\nexport default skillsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}