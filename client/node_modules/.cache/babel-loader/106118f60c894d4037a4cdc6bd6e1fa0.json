{"ast":null,"code":"import { LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT } from \"./authTypes\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  loading: true\n};\nexport default (function () {\n  let work = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_FAILURE:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...work,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...work,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    default:\n      return work;\n  }\n});","map":{"version":3,"sources":["C:/Users/dougi/OneDrive/Desktop/portfolio/client/src/redux/auth/authReducer.js"],"names":["LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT","initialState","token","localStorage","getItem","isAuthenticated","loading","work","action","type","removeItem","setItem","payload"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,EAAuCC,MAAvC,QAAqD,aAArD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,gBAAe,YAAiC;AAAA,MAAhCC,IAAgC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,aAAL;AACA,SAAKE,MAAL;AACEG,MAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGH,IADE;AAELL,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKP,aAAL;AACEI,MAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BC,OAAO,CAACV,KAAtC;AACA,aAAO,EACL,GAAGK,IADE;AAEL,WAAGK,OAFE;AAGLP,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,aAAOC,IAAP;AAnBJ;AAqBD,CAtBD","sourcesContent":["import { LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT } from \"./authTypes\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  loading: true,\n};\n\nexport default (work = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_FAILURE:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...work,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...work,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    default:\n      return work;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}