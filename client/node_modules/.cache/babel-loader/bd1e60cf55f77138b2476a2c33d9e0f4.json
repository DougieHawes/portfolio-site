{"ast":null,"code":"import { createSlice, creatAsyncThunk } from \"@reduxjs/toolkit\";\nimport { LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT } from \"./authTypes\";\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_FAILURE:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/dougi/OneDrive/Desktop/portfolio/client/src/redux/auth/authReducer.js"],"names":["createSlice","creatAsyncThunk","LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT","initialState","user","isError","isSuccess","isLoading","message","state","action","type","localStorage","removeItem","token","isAuthenticated","loading","setItem","payload"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,kBAA7C;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,MAAvC,QAAqD,aAArD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAQA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,aAAL;AACA,SAAKE,MAAL;AACEU,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,KAAK,EAAE,IAFF;AAGLC,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKf,aAAL;AACEW,MAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BC,OAAO,CAACJ,KAAtC;AACA,aAAO,EACL,GAAGL,KADE;AAEL,WAAGS,OAFE;AAGLH,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,aAAOP,KAAP;AAnBJ;AAqBD,CAtBD","sourcesContent":["import { createSlice, creatAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport { LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT } from \"./authTypes\";\n\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_FAILURE:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}