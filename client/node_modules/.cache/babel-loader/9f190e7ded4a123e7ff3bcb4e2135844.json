{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (e) {\n    e.response && e.response.data && e.response.data.message;\n  }\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: () => {}\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["C:/Users/dougi/OneDrive/Desktop/portfolio/client/src/redux/auth/authReducer.js"],"names":["createSlice","createAsyncThunk","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","login","thunkAPI","authService","e","response","data","authSlice","name","reducers","reset","state","extraReducers","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;AACnBL,EAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IADD;AAEnBM,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAQA,OAAO,MAAMC,KAAK,GAAGX,gBAAgB,CAAC,YAAD,EAAe,OAAOC,IAAP,EAAaW,QAAb,KAA0B;AAC5E,MAAI;AACF,WAAO,MAAMC,WAAW,CAACF,KAAZ,CAAkBV,IAAlB,CAAb;AACD,GAFD,CAEE,OAAOa,CAAP,EAAU;AACVA,IAAAA,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACC,QAAF,CAAWC,IAAzB,IAAiCF,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBN,OAAjD;AACD;AACF,CANoC,CAA9B;AAQP,OAAO,MAAMO,SAAS,GAAGlB,WAAW,CAAC;AACnCmB,EAAAA,IAAI,EAAE,MAD6B;AAEnCZ,EAAAA,YAFmC;AAGnCa,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACZ,SAAN,GAAkB,KAAlB;AACAY,MAAAA,KAAK,CAACb,SAAN,GAAkB,KAAlB;AACAa,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACAc,MAAAA,KAAK,CAACX,OAAN,GAAgB,EAAhB;AACD;AANO,GAHyB;AAWnCY,EAAAA,aAAa,EAAE,MAAM,CAAE;AAXY,CAAD,CAA7B;AAcP,OAAO,MAAM;AAAEF,EAAAA;AAAF,IAAYH,SAAS,CAACM,OAA5B;AACP,eAAeN,SAAS,CAACO,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (e) {\n    e.response && e.response.data && e.response.data.message;\n  }\n});\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    },\n  },\n  extraReducers: () => {},\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}