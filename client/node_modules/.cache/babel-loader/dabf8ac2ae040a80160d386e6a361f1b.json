{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dougi\\\\OneDrive\\\\Desktop\\\\portfolio\\\\client\\\\src\\\\components\\\\routes\\\\public\\\\Contact.js\",\n    _s = $RefreshSig$();\n\n// import dependencies\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"; // import redux\n\nimport { getProfile } from \"../../../redux/profile/profileReducer\"; // import utils\n\nimport PublicRoute from \"../../utils/PublicRoute.js\";\nimport { Button3 } from \"../../utils/buttons\";\nimport { Input1, Input2 } from \"../../utils/inputs\";\nimport { Link1 } from \"../../utils/links\"; // import helpers\n\nimport { getHeight, isEmail, isPhoneNumber } from \"../../helpers\"; // media imports\n\nimport codepenLogo from \"../../../media/codepen-logo.svg\";\nimport facebookLogo from \"../../../media/facebook-logo.svg\";\nimport githubLogo from \"../../../media/github-logo.svg\";\nimport linkedinLogo from \"../../../media/linkedin-logo.svg\";\nimport twitterLogo from \"../../../media/twitter-logo.svg\";\nimport youtubeLogo from \"../../../media/youtube-logo.svg\"; // import styles\n\nimport \"./style.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    linkedin: \"\",\n    name: \"\",\n    phone: \"\",\n    text: \"\",\n    title: \"\",\n    twitter: \"\"\n  });\n  const [state, setState] = useState({\n    btnDisabled: false,\n    btnText: \"submit\",\n    message: \"\",\n    showMessage: false\n  });\n  const {\n    email,\n    name,\n    linkedin,\n    phone,\n    text,\n    title,\n    twitter\n  } = formData;\n  const {\n    btnDisabled,\n    btnText,\n    message,\n    showMessage\n  } = state;\n  useEffect(() => {\n    if (email === \"\" || name === \"\" || phone === \"\" || text === \"\" || title === \"\") {\n      setState({ ...state,\n        message: \"please complete all mandatory fields\"\n      });\n    } else if (!isEmail(email)) {\n      setState({ ...state,\n        message: \"please enter a valid email\"\n      });\n    } else if (!isPhoneNumber(phone)) {\n      setState({ ...state,\n        message: \"please enter a valid phone number\"\n      });\n    } else {\n      setState({ ...state,\n        btnDisabled: false,\n        message: \"\"\n      });\n    }\n  }, [email, name, linkedin, phone, text, title, twitter]);\n\n  const handleChange = name => e => {\n    setFormData({ ...formData,\n      [name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (message.length > 0) {\n      setState({ ...state,\n        showMessage: true\n      });\n      setTimeout(() => {\n        setState({ ...state,\n          showMessage: false\n        });\n      }, 3000);\n    } else {\n      try {\n        setState({ ...state,\n          btnDisabled: true,\n          btnText: \"submitting...\"\n        });\n        axios.post(`${process.env.REACT_APP_API_URL}/mail`, formData);\n        setState({ ...state,\n          btnText: \"submitted\",\n          message: \"thank you for getting in touch\",\n          showMessage: true\n        });\n        setTimeout(() => {\n          setState({ ...state,\n            btnDisabled: false,\n            btnText: \"submit\",\n            message: \"\",\n            showMessage: false\n          });\n          setFormData({\n            email: \"\",\n            name: \"\",\n            linkedin: \"\",\n            phone: \"\",\n            text: \"\",\n            title: \"\",\n            twitter: \"\"\n          });\n        }, 2000);\n      } catch (e) {\n        setState({ ...state,\n          btnDisabled: false,\n          btnText: \"submit\",\n          message: \"message error\",\n          showMessage: true\n        });\n        setTimeout(() => {\n          setState({ ...state,\n            message: \"\",\n            showMessage: false\n          });\n        }, 2000);\n      }\n    }\n  };\n\n  const dispatch = useDispatch();\n  let profile = useSelector(state => state.profile);\n  useEffect(() => {\n    dispatch(getProfile());\n  }, []);\n\n  const content = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-links\",\n      children: [/*#__PURE__*/_jsxDEV(Link1, {\n        image: linkedinLogo,\n        sitename: \"Linkedin\",\n        to: profile && profile.youtube\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link1, {\n        image: twitterLogo,\n        sitename: \"Twitter\",\n        to: profile.twitter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link1, {\n        image: facebookLogo,\n        sitename: \"Facebook\",\n        to: profile.facebook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-inputs\",\n        style: {\n          maxHeight: getHeight(180, 170)\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-details-column\",\n            children: [/*#__PURE__*/_jsxDEV(Input1, {\n              label: \"Your name\",\n              onChange: handleChange(\"name\"),\n              placeholder: \"enter name\",\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input1, {\n              label: \"Email title\",\n              onChange: handleChange(\"title\"),\n              placeholder: \"enter title\",\n              value: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input1, {\n              label: \"Your email address\",\n              onChange: handleChange(\"email\"),\n              placeholder: \"enter email\",\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-details-column\",\n            children: [/*#__PURE__*/_jsxDEV(Input1, {\n              label: \"Your phone number\",\n              onChange: handleChange(\"phone\"),\n              placeholder: \"enter phone number\",\n              value: phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input1, {\n              label: \"Your Linkedin\",\n              onChange: handleChange(\"linkedin\"),\n              placeholder: \"optional\",\n              value: linkedin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input1, {\n              label: \"Your Twitter\",\n              onChange: handleChange(\"twitter\"),\n              placeholder: \"optional\",\n              value: twitter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input2, {\n          label: \"Email body\",\n          onChange: handleChange(\"text\"),\n          placeholder: \"enter email text\",\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button3, {\n        disabled: btnDisabled,\n        message: message,\n        showMessage: showMessage,\n        text: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(PublicRoute, {\n    content: content,\n    title: \"contact\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Contact, \"hXV9EgCElGx90X5EV9zCWyLBvME=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/dougi/OneDrive/Desktop/portfolio/client/src/components/routes/public/Contact.js"],"names":["axios","useEffect","useState","useSelector","useDispatch","getProfile","PublicRoute","Button3","Input1","Input2","Link1","getHeight","isEmail","isPhoneNumber","codepenLogo","facebookLogo","githubLogo","linkedinLogo","twitterLogo","youtubeLogo","Contact","formData","setFormData","email","linkedin","name","phone","text","title","twitter","state","setState","btnDisabled","btnText","message","showMessage","handleChange","e","target","value","handleSubmit","preventDefault","length","setTimeout","post","process","env","REACT_APP_API_URL","dispatch","profile","content","youtube","facebook","maxHeight"],"mappings":"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","sourcesContent":["// import dependencies\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// import redux\nimport { getProfile } from \"../../../redux/profile/profileReducer\";\n\n// import utils\nimport PublicRoute from \"../../utils/PublicRoute.js\";\nimport { Button3 } from \"../../utils/buttons\";\nimport { Input1, Input2 } from \"../../utils/inputs\";\nimport { Link1 } from \"../../utils/links\";\n\n// import helpers\nimport { getHeight, isEmail, isPhoneNumber } from \"../../helpers\";\n\n// media imports\nimport codepenLogo from \"../../../media/codepen-logo.svg\";\nimport facebookLogo from \"../../../media/facebook-logo.svg\";\nimport githubLogo from \"../../../media/github-logo.svg\";\nimport linkedinLogo from \"../../../media/linkedin-logo.svg\";\nimport twitterLogo from \"../../../media/twitter-logo.svg\";\nimport youtubeLogo from \"../../../media/youtube-logo.svg\";\n\n// import styles\nimport \"./style.min.css\";\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    linkedin: \"\",\n    name: \"\",\n    phone: \"\",\n    text: \"\",\n    title: \"\",\n    twitter: \"\",\n  });\n  const [state, setState] = useState({\n    btnDisabled: false,\n    btnText: \"submit\",\n    message: \"\",\n    showMessage: false,\n  });\n\n  const { email, name, linkedin, phone, text, title, twitter } = formData;\n  const { btnDisabled, btnText, message, showMessage } = state;\n\n  useEffect(() => {\n    if (\n      email === \"\" ||\n      name === \"\" ||\n      phone === \"\" ||\n      text === \"\" ||\n      title === \"\"\n    ) {\n      setState({ ...state, message: \"please complete all mandatory fields\" });\n    } else if (!isEmail(email)) {\n      setState({ ...state, message: \"please enter a valid email\" });\n    } else if (!isPhoneNumber(phone)) {\n      setState({ ...state, message: \"please enter a valid phone number\" });\n    } else {\n      setState({ ...state, btnDisabled: false, message: \"\" });\n    }\n  }, [email, name, linkedin, phone, text, title, twitter]);\n\n  const handleChange = (name) => (e) => {\n    setFormData({ ...formData, [name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (message.length > 0) {\n      setState({ ...state, showMessage: true });\n\n      setTimeout(() => {\n        setState({ ...state, showMessage: false });\n      }, 3000);\n    } else {\n      try {\n        setState({ ...state, btnDisabled: true, btnText: \"submitting...\" });\n\n        axios.post(`${process.env.REACT_APP_API_URL}/mail`, formData);\n\n        setState({\n          ...state,\n          btnText: \"submitted\",\n          message: \"thank you for getting in touch\",\n          showMessage: true,\n        });\n\n        setTimeout(() => {\n          setState({\n            ...state,\n            btnDisabled: false,\n            btnText: \"submit\",\n            message: \"\",\n            showMessage: false,\n          });\n\n          setFormData({\n            email: \"\",\n            name: \"\",\n            linkedin: \"\",\n            phone: \"\",\n            text: \"\",\n            title: \"\",\n            twitter: \"\",\n          });\n        }, 2000);\n      } catch (e) {\n        setState({\n          ...state,\n          btnDisabled: false,\n          btnText: \"submit\",\n          message: \"message error\",\n          showMessage: true,\n        });\n\n        setTimeout(() => {\n          setState({\n            ...state,\n            message: \"\",\n            showMessage: false,\n          });\n        }, 2000);\n      }\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  let profile = useSelector((state) => state.profile);\n\n  useEffect(() => {\n    dispatch(getProfile());\n  }, []);\n\n  const content = (\n    <div className=\"contact\">\n      <div className=\"contact-links\">\n        <Link1\n          image={linkedinLogo}\n          sitename=\"Linkedin\"\n          to={profile && profile.youtube}\n        />\n        <Link1 image={twitterLogo} sitename=\"Twitter\" to={profile.twitter} />\n        <Link1 image={facebookLogo} sitename=\"Facebook\" to={profile.facebook} />\n      </div>\n      <form className=\"contact-form\" onSubmit={handleSubmit}>\n        <div\n          className=\"contact-inputs\"\n          style={{ maxHeight: getHeight(180, 170) }}\n        >\n          <div className=\"contact-details\">\n            <div className=\"contact-details-column\">\n              <Input1\n                label=\"Your name\"\n                onChange={handleChange(\"name\")}\n                placeholder=\"enter name\"\n                value={name}\n              />\n              <Input1\n                label=\"Email title\"\n                onChange={handleChange(\"title\")}\n                placeholder=\"enter title\"\n                value={title}\n              />\n              <Input1\n                label=\"Your email address\"\n                onChange={handleChange(\"email\")}\n                placeholder=\"enter email\"\n                value={email}\n              />\n            </div>\n            <div className=\"contact-details-column\">\n              <Input1\n                label=\"Your phone number\"\n                onChange={handleChange(\"phone\")}\n                placeholder=\"enter phone number\"\n                value={phone}\n              />\n              <Input1\n                label=\"Your Linkedin\"\n                onChange={handleChange(\"linkedin\")}\n                placeholder=\"optional\"\n                value={linkedin}\n              />\n              <Input1\n                label=\"Your Twitter\"\n                onChange={handleChange(\"twitter\")}\n                placeholder=\"optional\"\n                value={twitter}\n              />\n            </div>\n          </div>\n          <Input2\n            label=\"Email body\"\n            onChange={handleChange(\"text\")}\n            placeholder=\"enter email text\"\n            value={text}\n          />\n        </div>\n        <Button3\n          disabled={btnDisabled}\n          message={message}\n          showMessage={showMessage}\n          text={btnText}\n        />\n      </form>\n    </div>\n  );\n\n  return <PublicRoute content={content} title=\"contact\" />;\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}